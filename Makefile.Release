#############################################################################
# Makefile for building: Xpars
# Generated by qmake (2.01a) (Qt 4.6.3) on: ?? 27. ??? 18:24:59 2017
# Project:  Xpars.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_NO_DEBUG -DQT_XML_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_THREAD_SUPPORT -DQT_NEEDS_QMAIN
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I"c:\Qt\2010.03\qt\include\QtCore" -I"c:\Qt\2010.03\qt\include\QtGui" -I"c:\Qt\2010.03\qt\include\QtXml" -I"c:\Qt\2010.03\qt\include" -I"c:\Qt\2010.03\qt\include\ActiveQt" -I"release" -I"." -I"c:\Qt\2010.03\qt\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -Wl,-s -mthreads -Wl -Wl,-subsystem,windows
LIBS        =        -L"c:\Qt\2010.03\qt\lib" -lmingw32 -lqtmain -lQtXml4 -lQtGui4 -lQtCore4 
QMAKE         = c:\qt\2010.03\qt\bin\qmake.exe
IDC           = c:\Qt\2010.03\qt\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release

####### Files

SOURCES       = main.cpp \
		xpars.cpp \
		dialog.cpp \
		mywidj.cpp \
		myscene.cpp release\moc_xpars.cpp \
		release\moc_dialog.cpp \
		release\moc_mywidj.cpp \
		release\moc_myscene.cpp
OBJECTS       = release/main.o \
		release/xpars.o \
		release/dialog.o \
		release/mywidj.o \
		release/myscene.o \
		release/moc_xpars.o \
		release/moc_dialog.o \
		release/moc_mywidj.o \
		release/moc_myscene.o
DIST          = 
QMAKE_TARGET  = Xpars
DESTDIR        = release\ #avoid trailing-slash linebreak
TARGET         = Xpars.exe
DESTDIR_TARGET = release\Xpars.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET): ui_xpars.h ui_dialog.h ui_mywidj.h $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) $(OBJECTS)  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -spec c:\Qt\2010.03\qt\mkspecs\win32-g++ -win32 CONFIG+=release -o Makefile.Release Xpars.pro

dist:
	$(ZIP) Xpars.zip $(SOURCES) $(DIST) Xpars.pro c:\Qt\2010.03\qt\mkspecs\qconfig.pri c:\Qt\2010.03\qt\mkspecs\features\qt_functions.prf c:\Qt\2010.03\qt\mkspecs\features\qt_config.prf c:\Qt\2010.03\qt\mkspecs\features\exclusive_builds.prf c:\Qt\2010.03\qt\mkspecs\features\default_pre.prf c:\Qt\2010.03\qt\mkspecs\features\win32\default_pre.prf c:\Qt\2010.03\qt\mkspecs\features\release.prf c:\Qt\2010.03\qt\mkspecs\features\debug_and_release.prf c:\Qt\2010.03\qt\mkspecs\features\default_post.prf c:\Qt\2010.03\qt\mkspecs\features\win32\default_post.prf c:\Qt\2010.03\qt\mkspecs\features\build_pass.prf c:\Qt\2010.03\qt\mkspecs\features\win32\rtti.prf c:\Qt\2010.03\qt\mkspecs\features\win32\exceptions.prf c:\Qt\2010.03\qt\mkspecs\features\win32\stl.prf c:\Qt\2010.03\qt\mkspecs\features\shared.prf c:\Qt\2010.03\qt\mkspecs\features\warn_on.prf c:\Qt\2010.03\qt\mkspecs\features\qt.prf c:\Qt\2010.03\qt\mkspecs\features\win32\thread.prf c:\Qt\2010.03\qt\mkspecs\features\moc.prf c:\Qt\2010.03\qt\mkspecs\features\win32\windows.prf c:\Qt\2010.03\qt\mkspecs\features\resources.prf c:\Qt\2010.03\qt\mkspecs\features\uic.prf c:\Qt\2010.03\qt\mkspecs\features\yacc.prf c:\Qt\2010.03\qt\mkspecs\features\lex.prf c:\Qt\2010.03\qt\mkspecs\features\include_source_dir.prf c:\Qt\2010.03\qt\lib\qtmain.prl  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release\main.o release\xpars.o release\dialog.o release\mywidj.o release\myscene.o release\moc_xpars.o release\moc_dialog.o release\moc_mywidj.o release\moc_myscene.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_xpars.cpp release/moc_dialog.cpp release/moc_mywidj.cpp release/moc_myscene.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release\moc_xpars.cpp release\moc_dialog.cpp release\moc_mywidj.cpp release\moc_myscene.cpp
release/moc_xpars.cpp: mywidj.h \
		myscene.h \
		dialog.h \
		xpars.h \
		xpars.h
	C:\Qt\2010.03\qt\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 xpars.h -o release\moc_xpars.cpp

release/moc_dialog.cpp: xpars.h \
		mywidj.h \
		myscene.h \
		dialog.h \
		dialog.h
	C:\Qt\2010.03\qt\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 dialog.h -o release\moc_dialog.cpp

release/moc_mywidj.cpp: myscene.h \
		mywidj.h
	C:\Qt\2010.03\qt\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 mywidj.h -o release\moc_mywidj.cpp

release/moc_myscene.cpp: myscene.h
	C:\Qt\2010.03\qt\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 myscene.h -o release\moc_myscene.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_xpars.h ui_dialog.h ui_mywidj.h
compiler_uic_clean:
	-$(DEL_FILE) ui_xpars.h ui_dialog.h ui_mywidj.h
ui_xpars.h: xpars.ui
	c:\Qt\2010.03\qt\bin\uic.exe xpars.ui -o ui_xpars.h

ui_dialog.h: dialog.ui
	c:\Qt\2010.03\qt\bin\uic.exe dialog.ui -o ui_dialog.h

ui_mywidj.h: mywidj.ui
	c:\Qt\2010.03\qt\bin\uic.exe mywidj.ui -o ui_mywidj.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 



####### Compile

release/main.o: main.cpp xpars.h \
		mywidj.h \
		myscene.h \
		dialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\main.o main.cpp

release/xpars.o: xpars.cpp xpars.h \
		mywidj.h \
		myscene.h \
		dialog.h \
		ui_xpars.h \
		ui_dialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\xpars.o xpars.cpp

release/dialog.o: dialog.cpp dialog.h \
		xpars.h \
		mywidj.h \
		myscene.h \
		ui_dialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\dialog.o dialog.cpp

release/mywidj.o: mywidj.cpp mywidj.h \
		myscene.h \
		ui_mywidj.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\mywidj.o mywidj.cpp

release/myscene.o: myscene.cpp myscene.h \
		mywidj.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\myscene.o myscene.cpp

release/moc_xpars.o: release/moc_xpars.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_xpars.o release\moc_xpars.cpp

release/moc_dialog.o: release/moc_dialog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_dialog.o release\moc_dialog.cpp

release/moc_mywidj.o: release/moc_mywidj.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_mywidj.o release\moc_mywidj.cpp

release/moc_myscene.o: release/moc_myscene.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_myscene.o release\moc_myscene.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

